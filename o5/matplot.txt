import matplotlib.pyplot as plt
# creating plot
plt.plot([1,2,3,4],[10,20,25,30])
# customizing  axis limits and abels
plt.xlim(0,5)
plt.ylim(0,35)
plt.xlabel('x-axis')
plt.ylabel('y-axis')
plt.title('Sample plot')
plt.show()

****sign wave plot***

from matplotlib import pyplot as plt
impotr numpy as np
import math 
#needed for defination of pi
x=np.arange(0,math.pi*2,0.05)
y=np.sin(x)
#print(x)
#print(y)
plt.plot(x,y)
plt.xlabel("angel")
plt.ylabel('sine')
plt.title('sine wave')
plt.show()

REFARENCE CODE
import numpy as np
x=np.arange(0,10,1)
y=3*x;
print(x)
print(y)

****matplot -LEGENDS****

import matplotlib.pyplot as plt
#example data 
year=[1,2,3]
veg_Rate=[2,4,6]
Milk_Rate=[1,3,5]
Fruit_Rate=[3,6,9]
#ploting the data
line1,=plt.plot(year,veg_Rate)
line2,=plt.plot(year,Milk_Rate)
line3,=plt.plot(year,Fruit_Rate)
#calling legend with explicitly listed artists and labels
plt.legend([line1, line2, line3,],['vegtable','milk','fruit'])
plt.xlabel('years')
plt.ylabel('rate')
#show the plot
plt.show()
print('Successfully placed a legend on the Axis')

**VERTICAL BAR CHART****

import matplotlib.pyplot as plt
categories=['lion','horse','kangaroo']
values=[15,24,30]
plt.bar(categories,values,color='skyblue')
plt.xlabel('Categories')
plt.ylabel('values')
plt.title('Basic Vertical Bar Graph')
plt.show()


****one mor exmple for barh****
import matplotlib.pyplot as plt
categories=['ferrai','Benz','honda']
values=[40,28,35]
plt.barh(categories,values,color=['greeon','orange','pink'])

plt.xlabel('Distance covered/km')
plt.ylabel('car name')
plt.title('Car race')
plt.show()

***GROUP BARCHART***

import matplotlib.pyplot as plt
import numpy as np
#defining categories and their corresponding values for 
categories=['lion','horse','kangaroo']
values1=[15,24,30]
values2=[20,18,25]
#setting the width of bars
bar_width=0.5
#calculating bar position for both group
bar_position1=np.arange(len(categories))
bar_position2=np.positions1+bar_width
#creating the first of bar(group 1)
plt.bar(bar_position1,values1,width=bar_width,label='2021',color='skyblue')
#creating the second of bars(group 2) next to first set
plt.bar(bar_position2,values2,width=bar_width,label='2022',color='yellow')
#adding labels to the axes
plt.xlabel('categories')
plt.ylabel('values')
#adding the title of the group
plt.title('grouped bar for graph')
#displaying the legend to identify the group
plt.legend()
#showing the plot
plt.show()


7/8/24
**** STACKED BAR GRAPH****

import matplotlib.pyplot as plt
#defining categries and values for two group
categories=['transport','income tax','house rent']
values1=[15,24,30]
values3=[20,18,25]
#creatind the first set of bars(group 1) without any offset
plt.bar(categories,values1,label='first half',color='skyblue')
#creating the second set of bar(group 2)plotted with
#this makes  group2 bars stacked on the top of group ! bars
plt.bar(categories,values3,bottom=values1,label='second half', color='yellow')
#adding labels to the axes
plt.xlabel('categories')
plt.ylabel('values')
plt.title('stacked bar grapg')
plt.legend()
plt.show()

****HISTOGRAM****

import matplotlib.pyplot as plt 
x=[70,50,100,70,50,100,50,50,50,70,50]
plt.hist(x,orientation="vertical")
plt.title('MARK  ANALYSIS')
plt.ylabel(' no of students')
plt.xlabel('marks')
plt.show()

****CUMULATIVE HISTOGRAM****

import matplotlib.pyplot as plt 
import numpy as np 
#genatrate  random exam scores (out of 100)
exam_scores=np.random.randint(0,100,50)
#create a cumulative histogram
plt.hist(exam_scores,bins=20,cumulative=True,color='pink',edgecolor='black')
plt.xlabel('exam scores')
plt.ylabel('cumulative number of students')
plt.title('cumulative histogram of exam scores')

****STACKED HISTOGRAM WITH MULTIPLE DATA SET ********

import matplotlib.pyplot as plt
import numpy as np 
#sample data for two dataset
marks1=np.array([2,4,5,7,9,10,11,13,14,15])
marks2=np.array([6,7,8,10,11,12,13,14,15,16])
#crating a stacked histogram with diffwrent colors
plt.hist([marks1,marks2],bins=10,stacked=True,color=['skyblue','salmon'],edgecolor='black')
plt.xlabel('marks')
plt.ylabel('count')
plt.title('stacked histogram with multiple datasets ')
plt.legend('mark dataset 1','mark dataset 2')
plt.show()


